#.单个字符
#\d任意以为数字
#[A-Z]A到Z中任意一个字符
#[a-z]a到z中任意一个字符
#[A-Za-z]a到z中任意一个字符（不区分大小写）
#+匹配一个或者多个（\d+匹配一个或者多个数字字符）
#[^/]+一个或者多个部位'/'的字符
#?零个或者一个之前的表达式（\d?匹配零个或者一个数字）
#*匹配零个或者更多（\d*匹配零个或者更多数字字符）
#{1,3}介于一个或者三个（包含）之前的表达式（\d{1,3}匹配一个或者两个或者三个数字）
#r表示的是原始字符串，不存在转义字符



    
总结一下：
进来的请求转入/hello/.
Django通过在ROOT_URLCONF配置来决定根URLconf.
Django在URLconf中的所有URL模式中，查找第一个匹配/hello/的条目。
如果找到匹配，将调用相应的视图函数
视图函数返回一个HttpResponse
Django转换HttpResponse为一个适合的HTTP response， 以Web page显示出来


句点查找规则可概括为：当模板协同在变量名中遇到点时，按照一下的顺序尝试进行查找：
1、字典类型查找（foo["bar"])
2、属性查找(foo.bar)
3、方法调用（foo.bar())
4、列表类型索引查找（foo[bar]）

python和django模板系统中布尔之为False的内容
1、空列表([])
2、空元组（()）
3、空字典（{}）
4、空字符串（''）
5、零值（0）
6、特殊对象None
7、对象False


for循环中
1、forloop.counter
2、forloop.counter0
3、forloop.revcounter  -- 与1相反
4、forloop.revcounter0
5、forloop.first 第一次为真
6、forloop.last 最后一次为真
7、forloop.parentloop 嵌套循环中的外层循环

只有模板变量、字符串、整数和小数可以作为{% ifequal %}标签的参数

注释为{# this is a comment #} 不可以跨多行
注释为{% comment %} this is a 
multi-line comment {% endcomment %}这个可以跨多行


{{my_list | first | upper}}查找列表中的第一个元素并将其转化为大写
{{bio | truncatewords:"30"}} 显示变量bio的前30个词

addslashes：添加反斜杠到任何反斜杠、单引号或者双引号前面。这在处理包含JavaScript的文本时非常有用

date：按制定的格式字符串参数格式化date或者datetime对象
{{ pub_date | date : "F j, Y"}}

length：返回变量的长度



template:
模板继承常见方式是下面的三层法：
1、创建base.html模板，在其中定义站点的主要外观感受。这些都是不常修改的部分
2、为网站的每个区域创建base_SECTON.html模板（例如:base_photo.html和base_forum.html)。这些模板对base.html进行拓展，并包含区域特定的风格和设计
3、为每种类型的页面创建独立的模板，例如论坛页面或者图片库。这些模板拓展相应的区域模板。

使用模板继承的一些诀窍：
1、如果模板中使用{% extends %}，必须保证其为模板中第一个模板标记。否则模板继承将不起作用。
2、一般来说，基础模板中的{% block %}标签越多越好。记住，自摸搬不必定义抚摸搬中的所有的代码快，因此你可以用合理的缺省值对一些代码进行填充，然后只对自摸搬所需要的代码进行（重）定义。俗话说，钩子越多越好。
3、如果发觉自己在多个模板之间拷贝代码，你应该考虑奖该代码段放置到父模板的某个{% block %}中。
4、如果你需要访问父模板中的块内容，使用{{ block.super }}这个标签吧，这个魔法变量将会表现出父模板中的内容。如果只想在上级代码块基础上添加内容，而不是全部重载，该变量就显得非常有用了。
5、不允许在同一个模板中定义多个同名的{% block %}。存在这样的限制是因为block标签的工作方式是双向的。也就是说，block标签不仅挖了一个要填的坑，也定义了在父模板中这个坑所填充的内容。如果模板中出现了两个相同名字的{% block %}，父模板将无从得知要使用哪个块的内容
6、{% extends %}对所传入模板名称使用的加载方式和get_template()相同。也就是说，会将模板名称被添加到TEMPLATE_DIRS设置之后。
7、多数情况下，{% extends %}的参数应该是字符串，但是如果直到运行时方能确定父模板名，这个参数也可以是个变量。这使得你能够实现一些很酷的动态功能。


MVC开发：
M，数据存取部分，由django数据库层处理
V，选择显示哪些数据要显示以及怎样显示的部分，由视图和模板处理。
C，根据用户输入委派视图的部分，由django框架根据URLconf设置，对给定的url调用适当的python函数。


model中的objects.filter(参数）：获得记录集列表
参数：
1、name__contains:包含
2、name__icontains：包含（大小写无关）
3、startswith
4、endswith
5、range(SQL BETWEEN查询)

model中的objects.get(参数)：获得记录中的某个对象
model中的objects.order_by(参数,参数):结果按照参数进行排序,参数之前加-为逆向排序
model中的objects.order_by()[0:3]
objects.filter(id=232).update(name='yn')
